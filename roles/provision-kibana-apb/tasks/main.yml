---
- name: Normalize secure value
  set_fact:
    secure: "{{ kibana_secure | bool }}"

- name: Process ImageStream from template
  template:
    src: kibana-is.yml.j2
    dest: "/tmp/kibana-is.yml"
  register: is

- name: Create ImageStream
  openshift_v1_image_stream:
    name: "{{ application_name }}"
    namespace: "{{ namespace }}"
    state: present
    src: "{{ is.dest | default(is.path) }}"

- name: Create Secure Service
  k8s_v1_service:
    name: "{{ application_name }}"
    namespace: "{{ namespace }}"
    state: present
    annotations:
      service.alpha.openshift.io/serving-cert-secret-name: "{{ application_name }}-proxy-tls"
    selector:
      app: "{{ application_name }}"
    ports:
      - name: proxy
        port: 8443
        target_port: 8443
    labels:
      app: "{{ application_name }}"
  when: secure

- name: Create Insecure Service
  k8s_v1_service:
    name: "{{ application_name }}"
    namespace: "{{ namespace }}"
    state: present
    selector:
      app: "{{ application_name }}"
    ports:
      - name: web
        port: 5601
        target_port: 5601
    labels:
      app: "{{ application_name }}"
  when: not secure

- name: Create Route
  openshift_v1_route:
    name: "{{ application_name }}"
    namespace: "{{ namespace }}"
    state: present
    spec_to_kind: Service
    spec_to_name: "{{ application_name }}"
    spec_tls_termination: "{{ 'Reencrypt' if secure else 'Edge'}}"
    labels:
      app: "{{ application_name }}"

- name: Create PersistentVolumeClaim
  k8s_v1_persistent_volume_claim:
    name: "{{ application_name }}-claim"
    namespace: "{{ namespace}}"
    labels:
      app: "{{ application_name }}"
    state: present
    access_modes:
    - ReadWriteOnce
    resources_requests:
      storage: "{{ kibana_pvc_size }}"
  when: _apb_plan_id == 'persistent'

- name: Process ServiceAccount from template
  template:
    src: kibana-sa.yml.j2
    dest: "/tmp/kibana-sa.yml"
  register: sa
  when: secure

- name: Create ServiceAccount
  k8s_v1_service_account:
    name: "{{ application_name }}"
    namespace: "{{ namespace}}"
    state: present
    src: "{{ sa.dest | default(sa.path) }}"
  when: secure

- name: Process DeploymentConfig from template
  template:
    src: kibana-dc.yml.j2
    dest: "/tmp/kibana-dc.yml"
  register: dc

- name: Create DeploymentConfig
  openshift_v1_deployment_config:
    name: "{{ application_name }}"
    namespace: "{{ namespace}}"
    state: present
    src: "{{ dc.dest | default(dc.path) }}"
