---
- name: Process ImageStream from template
  template:
    src: kibana-is.yml.j2
    dest: "/tmp/kibana-is.yml"
  register: is

- name: Create ImageStream
  openshift_v1_image_stream:
    name: "{{ application_name }}"
    namespace: "{{ namespace }}"
    state: present
    src: "{{ is.dest | default(is.path) }}"

- name: Create Service
  k8s_v1_service:
    name: "{{ application_name }}"
    namespace: "{{ namespace }}"
    state: present
    selector:
      app: "{{ application_name }}"
    ports:
      - name: web
        port: 5601
        target_port: 5601
    labels:
      app: "{{ application_name }}"

- name: Create Route
  openshift_v1_route:
    name: "{{ application_name }}"
    namespace: "{{ namespace }}"
    state: present
    spec_to_kind: Service
    spec_to_name: "{{ application_name }}"
    port_target_port: web
    labels:
      app: "{{ application_name }}"

- name: Create ConfigMap
  k8s_v1_config_map:
    name: "{{ application_name }}"
    namespace: "{{ namespace }}"
    labels:
      app: "{{ application_name }}"
    resource_definition:
      kind: 'ConfigMap'
      apiVersion: 'v1'
      metadata:
        name: "{{ application_name }}"
        namespace: "{{ namespace }}"
      data:
        kibana.yml: "{{ lookup('template', 'kibana-config.yml.j2') }}"

- name: Create PersistentVolumeClaim
  k8s_v1_persistent_volume_claim:
    name: "{{ application_name }}-claim"
    namespace: "{{ namespace}}"
    labels:
      app: "{{ application_name }}"
    state: present
    access_modes:
    - ReadWriteOnce
    resources_requests:
      storage: "{{ kibana_pvc_size }}"
  when: _apb_plan_id == 'persistent'

- name: Process DeploymentConfig from template
  template:
    src: kibana-dc.yml.j2
    dest: "/tmp/kibana-dc.yml"
  register: dc

- name: Create DeploymentConfig
  openshift_v1_deployment_config:
    name: "{{ application_name }}"
    namespace: "{{ namespace}}"
    state: present
    src: "{{ dc.dest | default(dc.path) }}"
